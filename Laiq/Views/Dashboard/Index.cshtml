
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<script src="/Scripts/highchart/3D/highcharts.js"></script>
<script src="/Scripts/highchart/3D/highcharts-3d.js"></script>
<script src="~/Scripts/pie-chart.js"></script>
<script src="~/Scripts/JScript.js"></script>


<script type="text/javascript">

    $(document).ready(function () {
        makeContextMenu('CMenu', 'ApplicantsGrid', 250, 90);
        $("#CMenu").on('itemclick', function (event) {
            var args = event.args;
            var varMenuItem = $.trim($(args).text());
            var rowindex = $("#ApplicantsGrid").jqxGrid('getselectedrowindex');
            if (varMenuItem == "View Detail") {
                var dataRecord = $("#ApplicantsGrid").jqxGrid('getrowdata', rowindex);
                var URL = "/Report/ViewProfile/" + dataRecord.EncodeID;
                window.open(URL, "_blank");
                //location.href = 
            }
            //else if (varMenuItem == "Assign  Applicant") {

            //    var dataRecord = $("#ApplicantsGrid").jqxGrid('getrowdata', rowindex);
            //    $("#LApplicantID").val(dataRecord.LApplicantID)
            //    $("#txtName").text(dataRecord.Name)
            //    $("#txtQual").text(dataRecord.QualificationNameEn)
            //    $("#Remarks").val('');
            //    $('#myModal').modal({
            //        backdrop: 'static',
            //        keyboard: false
            //    });
            //}
        });

        $("#LogOut").click(function () {
            location.href='/Account/Login'
        })
        setGrid('ApplicantsGrid');
        
        $('#demo-pie-1').pieChart({
            barColor: '#FF7868',
            trackColor: '#eee',
            lineCap: 'round',
            lineWidth:8,
            //onStep: function (from, to, percent) {
            //    $(this.element).find('.pie-value').text('25'  + '%');
            //}
        });
        $('#demo-pie-2').pieChart({
            barColor: '#FFB432',
            trackColor: '#eee',
            lineCap: 'round',
            lineWidth: 8,
            //onStep: function (from, to, percent) {
            //    $(this.element).find('.pie-value').text('25'  + '%');
            //}
        });
        makeAreaChart();
    });
    function LoadModal(varUrl)
    {
        fillGridApplicants(varUrl, 'ApplicantsGrid')
        $("#myModal").modal('show');
    }
    function makeAreaChart()
    {
        //varLabel = ['Herat', 'Nengarhar', 'Balkh', 'Kabul', 'Kunduz', 'Kandahar', 'Paktia'];
       // varValue = [502, 9435, 809, 947, 1402, 3634, 5268];
        
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByLocation', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            DrawChart(eduLabel, eduJSON);
        });
    }
    function drawExpYear() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartForExpYear', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData("mainContainter", "Chart Based on Experiance Year", "Applicants", "Experiance Year", eduJSON, eduLabel, -85, '/Dashboard/GetByExpYearData/')
        });
        //setGridNumeric('NumericGrid', 'QualificationName', 'COUNT', 'درجه تحصیل');
        //fillGridNumeric('/HR/Report/GetQualificationData', 'QualificationName');
    }
    function drawExpLevel() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByExpLevel', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData("mainContainter", "Chart Based on Experiance Level", "Applicants", "Experiance Level", eduJSON, eduLabel, -85, '/Dashboard/GetByExpLevelData?Id=')
        });
        //setGridNumeric('NumericGrid', 'QualificationName', 'COUNT', 'درجه تحصیل');
        //fillGridNumeric('/HR/Report/GetQualificationData', 'QualificationName');
    }
    function drawExpStaff(){
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByExpStaff', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData("mainContainter", "Chart Based on Applicant Subordinates", "Applicants", "Subordinates", eduJSON, eduLabel, -85, '/Dashboard/GetByExpStaffData/')
        });
        //setGridNumeric('NumericGrid', 'QualificationName', 'COUNT', 'درجه تحصیل');
        //fillGridNumeric('/HR/Report/GetQualificationData', 'QualificationName');
    }
    function drawAgeGroup() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByAgeGroup', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData("mainContainter", "Chart Based on Age Groups", "Applicants", "Age Group", eduJSON, eduLabel, -85, '/Dashboard/GetByAgeData?Age=')
        });
    }
    function drawQArea() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByQArea', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData("mainContainter", "Chart Based on Qualification Area", "Applicants", "Qualification  Area", eduJSON, eduLabel, -85, '/Dashboard/GetByQAreaData/')
        });
    }
    function drawEFName() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByEFName', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart Based on Field of Study", "Applicants", "Field of Study", eduJSON, eduLabel, -85, '/Dashboard/GetByEFData/')
        });
    }
    function drawEFMasterexp10() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartForEFMasterEXPYear10', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart of Master and 10 Years+ Experiance Based on Field of Study", "Applicants", "Field of Study", eduJSON, eduLabel, -85, '/Dashboard/GetByEFData/')
        });
    }
    function drawGenderMasterexp10() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartForGenderMasterEXPYear10', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart of Master and 10 Years+ Experiance Based on Gender", "Applicants", "Field of Study", eduJSON, eduLabel, -85, '/Dashboard/GetByEFData/')
        });
    }
    function drawEduLocMasterexp10()
    {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartForEduLocMasterEXPYear10', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart of Master's and 10 Years+ Experiance Based on Education Location", "Applicants", "Field of Study", eduJSON, eduLabel, -85, '/Dashboard/GetByEFData/')
        });
    }
    function drawExcellentSoftSkills() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetChartByExcellentSoftSkill', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart Based on Excellent Soft skills", "Applicants", "Soft Skills", eduJSON, eduLabel, -85, '/Dashboard/GetByExcellentSoftSkillData/')
        });
    }
    function drwaByTeam()
    {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetByTeam', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart Based on Teams", "Applicants", "Team Leader", eduJSON, eduLabel, -85, '/Dashboard/GetByTeamData/')
        });
    }
    function drawByTeamPhone()
    {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetPhoneByTeam', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart Based on Teams Phone Interview", "Applicants", "Team Leader", eduJSON, eduLabel, -85, '/Dashboard/GetByTeamDataPhone/')
        });
    }

    function drwaByTeamPendingPhone() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/PendingApplicantsForPhoneInterview', function (data) {
            for (i = 0; i < data.length; i++) {
                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);
            }
            visitorData1("mainContainter", "Chart Based on Pendign Phone Interviews By Teams", "Applicants", "Team Leader", eduJSON, eduLabel, -85, '/Dashboard/GetByTeamData/')
        });
    }
    
    function drwaByTeamCategory() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        $.getJSON('/Dashboard/GetByTeamCategory', function (data) {
            for (i = 0; i < data.length; i++) {

                eduJSON.push([data[i].Category, data[i].Counts]);
                eduLabel.push([data[i].Category]);

            }
            visitorData1("mainContainter", "Chart Based on Teams", "Applicants", "Applicant Category", eduJSON, eduLabel, -85, '/Dashboard/GetByTeamData/')
        });
    }
    function drawChart() {
        var eduJSON = new Array();
        var eduLabel = new Array();
        var varDebtArray = new Array();
        var varRecivedAryy = new Array();
        var varRemainDebtArray = new Array();
        var totaldebt = 0;
        var totalrecive = 0;
        var totalremainingdebt = 0;
        $.getJSON('/Dashboard/GetChartForEduLocGenderMasterEXPYear10', function (data) {
            for (i = 0; i < data.length; i++) {

                //eduJSON.push([data[i].Category, data[i].TotalAmount]);
                eduLabel.push([data[i].Category]);
                varDebtArray.push([data[i].Male]);
                varRecivedAryy.push([data[i].Female]);
                totaldebt += data[i].Male;
                totalrecive += data[i].Female;
            }
            //alert(totalrecive);
            //return;
            visitorData2(eduLabel, varDebtArray, varRecivedAryy, totaldebt, totalrecive);
        });

    }
    function setGrid(varGridName) {
        var cellclassname = function (row, column, value, data) {
            return "fonclass";
        }
        $("#" + varGridName).jqxGrid({
            width: '99%',
            theme: 'CLASSIC',
            enabletooltips: true,
            pageable: true,
            pagermode: 'simple',
            showfilterrow: false,
            filterable: true,
            editable: false,
            autoheight: true,
            columnsresize: false,
            sortable: true,
            altrows: true,
            //rtl: true,
            columns: [
                    { text: 'Name', dataField: 'Name', width: '15%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Mobile', dataField: 'Mobile', width: '10%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'WhatsApp', dataField: 'Mobile2', width: '10%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Email', dataField: 'Email', width: '15%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Qualification', dataField: 'QualificationNameEn', width: '10%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Qualification Area', dataField: 'QAreaEn', width: '10%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Field of Study', dataField: 'EFNameEn', width: '15%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Experiance', dataField: 'ExpYearEn', width: '10%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
                    { text: 'Age', dataField: 'Age', width: '5%', cellsalign: 'left', align: 'left', cellclassname: cellclassname },
            ]
        });
    }
    function fillGridApplicants(varURL, varGrid) {
        var datafields = [
                 { name: 'LApplicantID' },
                 { name: 'EncodeID' },
                 { name: 'Name' },
                 { name: 'Mobile' },
                 { name: 'Mobile2' },
                 { name: 'Email' },
                 { name: 'QualificationNameEn' },
                 { name: 'QAreaEn' },
                 { name: 'EFNameEn' },
                 { name: 'ExpYearEn' },
                 { name: 'Age' },

        ];
        fillGrid(datafields, varGrid, varURL);
    }
</script>
<style type="text/css">


    .pie-title-center {
        display: inline-block;
        position: relative;
        text-align: center;
        padding: 10px;
    }

    .pie-value {
        display: block;
        position: absolute;
        font-size: 12px;
        height: 40px;
        top: 50%;
        left: 0;
        right: 0;
        margin-top: -20px;
        line-height: 20px;
    }
.lbl{
    font-size:10px;
}
</style>
<div class="row" style="padding-top:10px;padding-bottom:10px;">
    <div class="col-lg-1">&nbsp;</div>
    <div class="col-lg-2" style="margin-right:10px;">
        <div class="row" style="background-color:#F9FFFF;border-radius:5px;">
            <div class="col-lg-5">
                <span>Not you?</span>
                <input type="button" id="LogOut" value="Logout" class="btn btn-primary btn-sm" style="background-color:#FCE3A1;border:1px solid #FCE3A1;" />
                <div><span><a href="/Dashboard"><i class="fa fa-home"></i></a></span></div>
                <div><span><a href="/Manage/ChangePassword"><i class="fa fa-gear"></i></a></span></div>
            </div>
            <div class="col-lg-7">
                <div class="text-center">
                    <img src="~/images/@Session["Photo"]" width="50" height="50" style="border-radius:50%;border:1px solid #FCE3A1;" />
                </div>
                <div>@Session["Name"]</div>
                <div>@Session["Position"]</div>
            </div>
        </div>
    </div>
    <div class="col-lg-5">
        <div class="row" style="background-color:#F9FFFF;border-radius:5px;">
            <div class="col-lg-12 p-1">
                @*<h6><a href="#" onclick="LoadModal('/Dashboard/GetAll');">Total CV: @ViewBag.TotalApplicants</a></h6>*@
                <div class="row">
                    <div class="col-lg-6"><h6><a href="/Report/GetAll">Total CV: @ViewBag.TotalApplicants</a></h6></div>
                    <div class="col-lg-6"><h6>Taregeted CV:10K</h6></div>
                </div>
               <br />
            </div>
            <div class="col-lg-12">
                <h6></h6>
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: @ViewBag.Percents%;" aria-valuenow="@ViewBag.Percents" aria-valuemin="0" aria-valuemax="100">@ViewBag.Percents%</div>
                </div>
                <br />
            </div>
        </div>
    </div>
    <div class="col-lg-3">
        <div class="row">
            <div class="col-lg-9">
                <h6>Da Afghanistan Breshna Sherkat</h6>
                <h6>Human Resources Directorate</h6>
                <h6>LaiQ</h6>
            </div>
            <div class="col-lg-3">
                <br />
                <img src="~/images/Laiq/flaiq.png" class="img-responsive" width="100" height="50" />
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-1">&nbsp;</div>
    <div class="col-lg-7 table-bordered">
        <div class="row" style="background-color:#F9FFFF;border-radius:5px;">
            <div class="col-lg-2" style="border-right:3px solid #C9D3DF;padding:5px;">
                <div><span class="fa fa-bar-chart"></span><span class="badge">charts</span></div>
                <div><a href="#" onclick="drawExpYear();" class="lbl">Experiance Year</a></div>
                <div><a href="#" onclick="drawExpLevel();" class="lbl">Experiance Level</a></div>
                <div><a href="#" onclick="drawExpStaff();" class="lbl">Supervisory Skills</a></div>
                <div><a href="#" onclick="drawAgeGroup();" class="lbl">Age Group</a></div>
                <div><a href="#" onclick="drawQArea();" class="lbl">Qualification Area</a></div>
                <div><a href="#" onclick="drawEFName();" class="lbl">Field of Study</a></div>
                <div><a href="#" onclick="drawEFMasterexp10();" class="lbl">Field Master+10Years Exp</a></div>
                <div><a href="#" onclick="drawGenderMasterexp10();" class="lbl">Gender Master+10Years Exp</a></div>
                <div><a href="#" onclick="drawEduLocMasterexp10();" class="lbl">Location Master+10Years Exp</a></div>
                <div><a href="#" onclick="drawChart();" class="lbl">Edu Loc Gend Master+10Years Exp</a></div>
                <div><a href="#" onclick="drawExcellentSoftSkills();" class="lbl">Excellent Soft Skills</a></div>
                <div><a href="#" onclick="drwaByTeam();" class="lbl">Team Assigned</a></div>
                <div><a href="#" onclick="drwaByTeamPendingPhone();" class="lbl">Team Pending Phones</a></div>
                
                <div><a href="/PhoneInterview/PhoneStatistics" class="lbl">Teams PhoneInterview</a></div>
                @*<div><a href="#" onclick="drwaByTeamCategory();" class="lbl">Category By Teams</a></div>*@
                
                <div class="row">
                    <div class="col-lg-12"><span class="fa fa-list"></span><span class="badge">List</span></div>
                </div>
                <div><a href="/Report/MyApplicants" class="lbl">Assigned Appplicants</a></div>
                <div><a href="/PhoneInterview/PhoneInterviewed" class="lbl">Phone Interviewed</a></div>
                @if (User.IsInRole("GroupSess"))
                {
                    <div><a href="/GroupDis/Index" class="lbl">Session Mgmt</a></div>
                }
                @if (User.IsInRole("Panel"))
                {
                    <div><a href="/Account/Register" class="lbl">Group Interview</a></div>
                }

            </div>
            <div class="col-lg-10">
                <div id="mainContainter"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-2 table-bordered">
        <div class="row m-1 p-1" style="background-color:#F9FFFF; border-radius:5px;">
            <p>Applicants Qualifications</p>
            <div class="col-lg-12">
                <p><a href="#" onclick="LoadModal('/Dashboard/GetByQualification/1');">Total Phd: @ViewBag.Phd </a></p>
                <div class="progress">
                    <div class="progress-bar bg-success" role="progressbar" style="width: @ViewBag.PhdPercent%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@ViewBag.PhdPercent%</div>
                </div>
            </div>
            <div class="col-lg-12">&nbsp;</div>
            <div class="col-lg-12">
                <p><a href="#" onclick="LoadModal('/Dashboard/GetByQualification/2');">Total Masters:@ViewBag.Master</a></p>
                <div class="progress">
                    <div class="progress-bar bg-info" role="progressbar" style="width: @ViewBag.MasterPercent%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@ViewBag.MasterPercent%</div>
                </div>
            </div>
            <div class="col-lg-12">&nbsp;</div>
            <div class="col-lg-12">
                <p><a href="#" onclick="LoadModal('/Dashboard/GetByQualification/3');">Total Bachelors:@ViewBag.Bachlor</a></p>
                <div class="progress">
                    <div class="progress-bar bg-warning" role="progressbar" style="width: @ViewBag.BachelorPercent%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@ViewBag.BachelorPercent%</div>
                </div>
            </div>
            <div class="col-lg-12">&nbsp;</div>
            <div class="col-lg-12">&nbsp;</div>
        </div>
    </div>
    <div class="col-lg-2 table-bordered" >
        <div class="row m-1 p-1" style="background-color:#F9FFFF; border-radius:5px;">
            <p>Applicants Classification</p>
            <div class="col-lg-12 text-center">
                <h6><a href="#" onclick="LoadModal('/Dashboard/GetByGender/F');">Female:@ViewBag.Female</a></h6>
                <div id="demo-pie-1" class="pie-title-center" data-percent="@ViewBag.FemalePercent">
                 <span class="pie-value">@ViewBag.FemalePercent%<br />Female</span> 
                </div>
            </div>
            <div class="col-lg-12 text-center">
                <h6><a href="#" onclick="LoadModal('/Dashboard/GetByGender/M');">Male:@ViewBag.Male</a></h6>
                <div id="demo-pie-2" class="pie-title-center" data-percent="@ViewBag.MalePercent">
                    <span class="pie-value">@ViewBag.MalePercent%<br />Male</span>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="row" style="padding-top:15px;">
    <div class="col-lg-1">&nbsp;</div>
    <div class="chart col-lg-8" style="padding-left:0px;border-radius:5px;background-color:#FFFFFF;">
        <div id="container"></div>
    </div>
    <div class="col-lg-2 " >
        <div class="row m-1 p-1" style="background-color:#8FAABF; border-radius:5px;">
            <div class="col-lg-12">
                <p><b>Today:</b>&nbsp;&nbsp;@ViewBag.ToDay</p>
                <p><b>This Week:</b>&nbsp;&nbsp;@ViewBag.ThisWeek</p>
                <p><b>This Month:</b>&nbsp;&nbsp;@ViewBag.ThisMonth</p>
            </div>
           
        </div>
        
    </div>
    <div class="col-lg-1">&nbsp;</div>

</div>

<script type="text/javascript">
    function DrawChart(varLabel,varValues)
    {
        Highcharts.chart('container', {
            chart: {
                height: 300,
                type: 'area'
            },
            title: {
                text: 'Applicants By Provinces'
            },
            subtitle: {
                text: 'Source: Laiq.dabs.af'
            },
            xAxis: {
                categories: varLabel,
                tickmarkPlacement: 'on',
                title: {
                    enabled: false
                }
            },
            yAxis: {
                title: {
                    text: 'Applicants'
                },
                labels: {
                    formatter: function () {
                        return this.value / 1000;
                    }
                }
            },
            tooltip: {
                split: true,
                valueSuffix: ' Applicants'
            },
            plotOptions: {
                area: {
                    stacking: 'normal',
                    lineColor: '#666666',
                    lineWidth: 1,
                    marker: {
                        lineWidth: 1,
                        lineColor: '#666666'
                    }
                },
                series: {
            cursor: 'pointer',
            point: {
                events: {
                        click: function () {
                            //alert(this.category);
                            //openModal(varURL + this.category, vartext3, this.category);
                            LoadModal('/Dashboard/GetByLocationData/' + this.category);
                            //$("#ReportURL").val("/Areas/HR/Reports/StatisticsReport.aspx?type=" + vartext3 + "&&value=" + this.category);
                            //alert(this.category);
                        }
                }
            }
        }
            },
            series: [{
                name: 'Applicants',
                data: varValues
            }
            //{
            //    name: 'Africa',
            //    data: [106, 107, 111, 133, 221, 767, 1766]
            //}, {
            //    name: 'Europe',
            //    data: [163, 203, 276, 408, 547, 729, 628]
            //}, {
            //    name: 'America',
            //    data: [18, 31, 54, 156, 339, 818, 1201]
            //}, {
            //    name: 'Oceania',
            //    data: [2, 2, 2, 6, 13, 30, 46]
            //}
            ]
        });
    }

    function visitorData(varContainer, vartext1, vartext2, vartext3, vardata, varLabelData, varrotation,varURL) {
        //alert(varLabelData);
        $('#' + varContainer).highcharts({
            chart: {

                type: 'column',
                options3d: {
                    enabled: true,
                    alpha: 10,
                    beta: 25,
                    depth: 70
                }
            },
            title: {
                text: vartext1
            },
            xAxis: {
                type: 'category',
                categories:varLabelData,
                //labels: {
                //    rotation: varrotation,
                //}
            },
            yAxis: {
                allowDecimals: false,
                min: 0,
                title: {
                    text: vartext2
                },
                stackLabels: {
                    enabled: true,
                }
            },

                tooltip: {
                    headerFormat: '<b>{point.key}</b><br>',
                    pointFormat: '<span style="color:{series.color}">\u25CF</span> {series.COUNT}: {point.y} / {point.stackTotal}',
            shared: true,
            useHTML: true

                },

        plotOptions: {
                //bar: {
                //    dataLabels: {
                //            enabled: true
                //    }
                //},
            column: {
                    //depth: 25,
                    //pointPadding: 0.2,
                    //borderWidth: 0
					//,dataLabels: {
                    //enabled: true,
                    //color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'red'
                //}
                colorByPoint: true,
                    stacking: 'normal',
                    depth: 40

            },
            series: {
                cursor: 'pointer',
                point: {
                    events: {
                        click: function () {
                            //alert(this.category);
                            //openModal(varURL + this.category, vartext3, this.category);
                            LoadModal(varURL + this.category);
                            //$("#ReportURL").val("/Areas/HR/Reports/StatisticsReport.aspx?type=" + vartext3 + "&&value=" + this.category);
                            //alert(this.category);
                        }
                    }
                }
            }
        },
            series: [{
                name: vartext3,
                data: vardata,
            }]
        });
    }
    function visitorData1(varContainer, vartext1, vartext2, vartext3, vardata, varLabelData, varrotation, varURL) {
        //alert(varLabelData);
        $('#' + varContainer).highcharts({
            chart: {

                type: 'column',
                
            },
            title: {
                text: vartext1
            },
            xAxis: {
                type: 'category',
                categories: varLabelData,
                //labels: {
                //    rotation: varrotation,
                //}
            },
            yAxis: {
                allowDecimals: false,
                min: 0,
                title: {
                    text: vartext2
                },
                stackLabels: {
                    enabled: true,
                }
            },

            tooltip: {
                headerFormat: '<b>{point.key}</b><br>',
                pointFormat: '<span style="color:{series.color}">\u25CF</span> {series.COUNT}: {point.y} / {point.stackTotal}',
                shared: true,
                useHTML: true

            },

            plotOptions: {
                //bar: {
                //    dataLabels: {
                //            enabled: true
                //    }
                //},
                column: {
                    //depth: 25,
                    //pointPadding: 0.2,
                    //borderWidth: 0
                    //,dataLabels: {
                    //enabled: true,
                    //color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'red'
                    //}
                    colorByPoint: true,
                    stacking: 'normal',
                    depth: 40

                },
                series: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {
                                LoadModal(varURL + this.category);
                                //openModal(varURL + this.category, vartext3, this.category);
                                //$("#ReportURL").val("/Areas/HR/Reports/StatisticsReport.aspx?type=" + vartext3 + "&&value=" + this.category);
                                //alert(this.category);
                            }
                        }
                    }
                }
            },
            series: [{
                name: vartext3,
                data: vardata,
            }]
        });
    }
    function fillGrid(df, varGridName, varURL) {
        var source =
    {
        datatype: "json",
        datafields: df,
        cache: false,
        url: varURL,
        root: 'Rows'
    };

        var dataadapter = new $.jqx.dataAdapter(source, {
            loadError: function (xhr, status, error) {
                console.log(error);
            }
        }
        );

        $("#" + varGridName).jqxGrid(
        {
            source: dataadapter
        });
    }
    function visitorData2(varCategories, varDebtArray, varRecivedAryy, totaldebt, totalrecive) {
        Highcharts.chart('mainContainter', {
            title: {
                text: 'Masters and 10 Years+ Experiance Based on Education Location and Gender'
            },
            xAxis: {
                categories: varCategories
            },
            labels: {
                items: [{
                    html: 'Total By Gender',
                    style: {
                        left: '50px',
                        top: '18px',
                        color: ( // theme
                            Highcharts.defaultOptions.title.style &&
                            Highcharts.defaultOptions.title.style.color
                        ) || 'red'
                    }
                }]
            },
            //tooltip: {
            //    headerFormat: '<b>{point.key}</b><br>',
            //    pointFormat: '<span style="color:{series.color}">\u25CF</span> {series.COUNT}: {point.y} / {point.stackTotal}',
            //    shared: true,
            //    useHTML: true

            //},
            plotOptions: {
                series: {
                    dataLabels: {
                        enabled: true
                    }
                }
            },
            series: [{
                type: 'column',
                name: 'Male',
                data: varDebtArray,
                color: Highcharts.getOptions().colors[1]


            }, {
                type: 'column',
                name: 'Female',
                data: varRecivedAryy,
                color: Highcharts.getOptions().colors[0]
            },
            //{
            //    type: 'column',
            //    name: 'Remain Debt',
            //    data: varRemainDebtArray,
            //    color: Highcharts.getOptions().colors[2]
            //},
            //{
            //type: 'spline',
            //name: 'Average',
            //data: [3, 2.67, 3, 6.33, 3.33],
            //marker: {
            //    lineWidth: 2,
            //    lineColor: Highcharts.getOptions().colors[3],
            //    fillColor: 'white'
            //}
            //},
            //totaldebt, totalrecive, totalremainingdebt
            {
                type: 'pie',
                name: 'Total',
                data: [{
                    name: 'Total Debt',
                    y: totaldebt,
                    color: Highcharts.getOptions().colors[1] // Jane's color
                }, {
                    name: 'Total Recived',
                    y: totalrecive,
                    color: Highcharts.getOptions().colors[0] // John's color
                },
                //{
                //    name: 'Total Remaining Debt',
                //    y: totalremainingdebt,
                //    color: Highcharts.getOptions().colors[2] // Joe's color
                //}
                ],
                center: [120, 80],
                size: 100,
                showInLegend: false,
                dataLabels: {
                    enabled: false
                }
            }]
        });
    }
</script>
<form id="dataForm">
    <input type="hidden" name="URL" id="ReportURL" width="400" />
    <input type="hidden" name="Label" id="ReportLabel" width="400" />
</form>
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-xl">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header ">
                <h4 class="modal-title pull-left">Applicants</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="ApplicantsGrid"></div>
            </div>
        </div>
    </div>
</div>
<div id="CMenu">
    <ul dir="rtl">
        <li id="Insert">
            <img src="/images/folder.png" class="pull-right" />
            <span class="fonclass">View Detail</span>
        </li>
        @*<li id="Edit">
            <img src="/images/pencil.png" class="pull-right" />
            <span class="fonclass">Assign  Applicant</span>
        </li>*@
    </ul>
</div>