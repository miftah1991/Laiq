
@{
    ViewBag.Title = "OfflineInterViewNew";
    Layout = "~/Views/Shared/_LayoutGroups.cshtml";

}
<script type="text/javascript">

    $(document).ready(function () {

        var select2Options = { width: 'resolve' };
        var apiUrl = '/PanelGroupDisc/GetGroupPanel/';

        $('select').select2(select2Options);
        var cascadLoading = new Select2Cascade($('#Groups'), $('#PUSERID'), apiUrl, select2Options);
        cascadLoading.then(function (parent, child, items) {
            // Dump response data
            //console.log(items);
        });




        //GetMyApplicants('LApplicantID');
        GetGroups('Groups');
        //GetPanels('PUSERID');

        var datatable = $("#tblApplicants").DataTable();
        $(".cls").click(function () {
            $('#myModal').modal('hide');
        })
        $("#AddNew").click(function () {
            $('#frmGroupInterview').trigger("reset");
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: false
            });
        });
        //GetPanels('USERID');

        //$("#Groups").change(function () {
        //    var ID = $("#Groups").val();
        //    //$('#tblApplicants').DataTable().destroy();
        //    //fillData(ID);
        //});
        $("#SubmitGroup").click(function () {
            var ID = $("#Groups").val();
            if (ID == null || ID == 0 || ID == "") {
                toastr["error"]("Please Select a Group");
                return;
            }
            var PanID = $("#PUSERID").val();
            if (PanID == null || PanID == 0 || PanID == "") {
                toastr["error"]("Please Select a Panel");
                return;
            }
            var conf = confirm("Are you sure to submit Gropu discussion marking.")
            if (conf) {
                $.ajax({
                    url: '/PanelGroupDisc/SubmitPanelMarks?GroupID='+ID+'&&USERID='+PanID,
                    type: 'post',
                    success: function (result) {
                        if (result == "true") {
                            toastr["success"]('Saved Successfully');
                            //location.reload();
                        }
                        else {
                            toastr["error"](result);
                        }
                    }
                });
            }
        })
        $("#Submit").click(function () {
            var validationResult = function (isValid) {
                if (isValid) {
                    $.ajax({
                        url: '/PanelGroupDisc/SavePanelMarks',
                            type: 'post',
                            data: $('#frmGroupInterview').serialize(),
                            success: function (result) {
                                if (result == "true") {
                                    //$('#myModal').modal('hide');
                                    toastr["success"]('Saved Successfully');
                                    var ID = $("#Groups").val();
                                    $('#tblApplicants').DataTable().destroy();
                                    fillData(ID);
                                    //location.reload();
                                }
                                else {
                                    toastr["error"](result);
                                }
                                }
                        });
                }
            }
            $('#frmGroupInterview').jqxValidator('validate', validationResult)
        });
        $('#frmGroupInterview').jqxValidator({
            hintType: 'label',
            animationDuration: 0,
            rtl: true,
            rules: [
            { input: '#LApplicantID', message: 'Required ! ', action: 'blur', rule: function (input) { var val = $("#LApplicantID").val(); if (val == "" || val == 0) { return false; } return true; } },
            //{ input: '#ExpectedPosition', message: 'Required ! ', action: 'blur', rule: function (input) { var val = $("#ExpectedPosition").val(); if (val == "" || val == 0) { return false; } return true; } },
            //{ input: '#ExpectedPosition', message: '  حتمی!  ', action: 'keyup, blur', rule: 'required' },
            ], theme: 'classic'
        });

    });
    function fillData(varID,varUSERID)
    {
        $('#tblApplicants').dataTable({
            responsive: true,
            destroy: true,
            "ajax": "/PanelGroupDisc/GetPanlMarksByGroupAndUSERIDOffline?GID=" + varID + "&&USERID=" + varUSERID,
            "columns": [
                       //{ "data": "" },
                        //{
                        //    "data": "id",
                        //    render: function (data, type, row, meta) {
                        //        return meta.row + meta.settings._iDisplayStart + 1;
                        //    }
                        //},
                       { "data": "LApplicantID" },
                       //{ "data": "USERID" },
                       { "data": "Communication" },
                       { "data": "Creativity" },
                       { "data": "Leadership" },
                       { "data": "English" },
                       { "data": "Dari" },
                       { "data": "Pashto" },
                       { "data": "Remarks" },
                       {
                           "mRender": function (data, type, row) {

                               return moment(row.CreatedOn).format("YYYY-MM-DD");
                           }
                       },
                        {
                            "mRender": function (data, type, row) {
                                return '<a class="fa fa-pencil"  href="#" onclick="EditPanelMarking(' + row.LApplicantID + ',' + row.Communication + ',' + row.Creativity + ',' + row.Leadership + ',' + row.English + ',' + row.Dari + ',' + row.Pashto + ')"></a>';
                            }
                        },
                       //{
                       //    "mRender": function (data, type, row) {
                       //        if (row.UpdatedOn != null) {
                       //            return moment(row.UpdatedOn).format("YYYY-MM-DD");
                       //        } else {
                       //            return '';
                       //        }

                       //    }
                       //},

            ],
            //"language": {
            //    "search": "جستجو",
            //    "sLengthMenu": "مشاهده _MENU_ ریکارد",
            //    "info": "از _START_ تابه _END_ ریکارد _TOTAL_ ریکارد مجموع",
            //    "oPaginate": {
            //        "sFirst": "اول", // This is the link to the first page
            //        "sPrevious": "قبلی", // This is the link to the previous page
            //        "sNext": "بعدی", // This is the link to the next page
            //        "sLast": "آخر" // This is the link to the last page
            //    }
            //}
        });
    }
    function EditPanelMarking(varAppID,varComm,varCreate,varLeader,varEng,varDar,varPash)
    {
        $('#frmGroupInterview').trigger("reset");
        $("#LApplicantID").val(varAppID);
        $("input[name=Communication][value=" + varComm + "]").prop('checked', true);
        $("input[name=Creativity][value=" + varCreate + "]").prop('checked', true);
        $("input[name=Leadership][value=" + varLeader + "]").prop('checked', true);
        $("input[name=English][value=" + varEng + "]").prop('checked', true);
        $("input[name=Dari][value=" + varDar + "]").prop('checked', true);
        $("input[name=Pashto][value=" + varPash + "]").prop('checked', true);

        $('#myModal').modal({
            backdrop: 'static',
            keyboard: false
        });
    }
</script>
<div class="row">
    <div class="col-lg-1">&nbsp;</div>
    <div class="card col-lg-10">
        <div class="card-header">
            <div class="row">
                <div class="col-lg-3">Group Discussion Marking</div>
                <div class="col-lg-3">
                    <select class="form-control" id="Groups">
                        <option value="0"> Please Select Group</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <select id="PUSERID" name="PUSERID" class="form-control">
                        <option value="0">Please Select</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <input type="button" class="btn btn-dark pull-right fonclass" id="AddNew" value="Applicant Marking" />
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-lg-12">
                    <table class="table table-bordered" id="tblApplicants">
                        <thead>
                            <tr>
                                <td>ApplicantID</td>
                                <td>Communication</td>
                                <td>Creativity</td>
                                <td>Leadership</td>
                                <td>English</td>
                                <td>Dari</td>
                                <td>Pashto</td>
                                <td>Remarks</td>
                                <td>Created On</td>
                                <td>Edit</td>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 text-center">

                </div>
                <div class="col-lg-6 text-center">
                    <input type="button" class="btn btn-primary fonclass" id="SubmitGroup" value="Submit Group Discussion Marking" />
                </div>
            </div>
        </div>

    </div>
    <div class="col-lg-1">&nbsp;</div>

</div>
<script type="text/javascript">
    function GetGroups(varDDL) {
        var inc = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Groups))';
        inc = JSON.parse(inc);
        var mydata = inc["Data"];
        $.each(mydata, function (index, data) {
            $('#' + varDDL).append($('<option />', {
                value: data.GDID,
                text: data.GDName
            }));
        });
    }
    @*function GetPanels(varDDL) {
        var inc = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.dataUSERS))';
        inc = JSON.parse(inc);
        var mydata = inc["Data"];
        $.each(mydata, function (index, data) {
            $('#' + varDDL).append($('<option />', {
                value: data.USERID,
                text: data.Name
            }));
        });
    }*@
    function GetMyApplicants(varDDL) {
        var inc = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.dataApplicants))';
        inc = JSON.parse(inc);
        var mydata = inc["Data"];
        $.each(mydata, function (index, data) {
            $('#' + varDDL).append($('<option />', {
                value: data.LApplicantID,
                text: data.Name
            }));
        });
    }


    var Select2Cascade = (function (window, $) {

        function Select2Cascade(parent, child, url, select2Options) {
            var afterActions = [];
            var options = select2Options || {};

            // Register functions to be called after cascading data loading done
            this.then = function (callback) {
                afterActions.push(callback);
                return this;
            };

            parent.select2(select2Options).on("change", function (e) {
                child.prop("disabled", true);

                var _this = this;
                //$.ajaxSetup({
                //    async: false
                //});
                $.getJSON(url + $(this).val(), function (items) {
                    var newOptions = '<option value="">-- Select --</option>';
                    $.each(items, function (key, value) {
                        newOptions += '<option value="' + value.LApplicantID + '">' + value.Name + '</option>';
                    });

                    child.select2('destroy').html(newOptions).prop("disabled", false)
                        .select2(options);

                    afterActions.forEach(function (callback) {
                        callback(parent, child, items);
                    });
                });
            });
        }

        return Select2Cascade;

    })(window, $);
</script>

